@page "/"
@using DemoProject.Models
@using System.Text.Json
@using Microsoft.Extensions.Configuration
@inject HttpClient HttpClient
@inject IConfiguration Config

<h1 class="text-center text-primary">Marvel Search Engine</h1>
<div class="text-center">
    <div class="p-2">
        <input class="form-control form-control-lg w-50 mx-auto mt-4" placeholder="Character name" @bind-value="_searchTerm"/>
    </div>
    <div class="p-2">
        <button class="btn btn-primary btn-lg" @onclick="HandleSearch">Search the Marvel API</button>
    </div>
</div>

@if (_searchResponse != null)
{
    <p class="text-center">@_searchResponse.AttributionText</p>
                                                           
    <div class="container">
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">
            @foreach (var result in _searchResponse.Data.Results)
            {
                <div class="col mb-4">
                    <div class="card h-100">
                        <img src="@($"{result.Thumbnail.Path}.{result.Thumbnail.Extension}")"
                             class="card-img-top"
                             style="object-fit: cover; height: 300px">
                        <div class="card-body">
                            <h5 class="card-title">@result.Name</h5>
                            <p class="card-text">
                                @result.Description
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code
{
    private string _searchTerm;
    private string _apiKey = "<your-key-here>";
    
    private MarvelSearchResult _searchResponse;

    private async Task HandleSearch()
    {
        var url = $"characters?nameStartsWith={_searchTerm}&apikey={_apiKey}";

        _searchResponse = await HttpClient
            .GetFromJsonAsync<MarvelSearchResult>(url, new JsonSerializerOptions
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase
            });
    }
}